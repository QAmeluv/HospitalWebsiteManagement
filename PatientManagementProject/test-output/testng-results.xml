<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="10" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-31T14:20:45 GST" name="GroupSuite" finished-at="2024-07-31T14:23:24 GST" duration-ms="158736">
    <groups>
      <group name="basicfunctionality">
        <method signature="HomePageTestClass.verifyLogoOutIsSucessful()[pri:1, instance:testClasses.HomePageTestClass@6f3c660a]" name="verifyLogoOutIsSucessful" class="testClasses.HomePageTestClass"/>
        <method signature="LoginPageTestClass.verifyIfLogoIsDiplayed()[pri:1, instance:testClasses.LoginPageTestClass@71c27ee8]" name="verifyIfLogoIsDiplayed" class="testClasses.LoginPageTestClass"/>
        <method signature="RegisterAPatientTestClass.verifyPatientRegistration()[pri:1, instance:testClasses.RegisterAPatientTestClass@3e7dd664]" name="verifyPatientRegistration" class="testClasses.RegisterAPatientTestClass"/>
        <method signature="LoginPageTestClass.verifyUnsucessfulLogin(java.lang.String,java.lang.String)[pri:2, instance:testClasses.LoginPageTestClass@71c27ee8]" name="verifyUnsucessfulLogin" class="testClasses.LoginPageTestClass"/>
        <method signature="LoginPageTestClass.verifyCannotLoginOption()[pri:3, instance:testClasses.LoginPageTestClass@71c27ee8]" name="verifyCannotLoginOption" class="testClasses.LoginPageTestClass"/>
        <method signature="LoginPageTestClass.verifySucessfulLogin()[pri:4, instance:testClasses.LoginPageTestClass@71c27ee8]" name="verifySucessfulLogin" class="testClasses.LoginPageTestClass"/>
      </group> <!-- basicfunctionality -->
    </groups>
    <test started-at="2024-07-31T14:20:45 GST" name="Test" finished-at="2024-07-31T14:23:24 GST" duration-ms="158736">
      <class name="testClasses.HomePageTestClass">
        <test-method is-config="true" signature="createReport(org.testng.ITestContext)[pri:0, instance:testClasses.HomePageTestClass@6f3c660a]" started-at="2024-07-31T14:20:45 GST" name="createReport" finished-at="2024-07-31T14:20:45 GST" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@374ccb9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.HomePageTestClass@6f3c660a]" started-at="2024-07-31T14:20:46 GST" name="beforeMethod" finished-at="2024-07-31T14:20:59 GST" duration-ms="13617" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLogoOutIsSucessful()[pri:1, instance:testClasses.HomePageTestClass@6f3c660a]" started-at="2024-07-31T14:20:59 GST" name="verifyLogoOutIsSucessful" finished-at="2024-07-31T14:21:09 GST" duration-ms="9547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoOutIsSucessful -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.HomePageTestClass@6f3c660a]" started-at="2024-07-31T14:21:09 GST" name="afterMethod" finished-at="2024-07-31T14:21:09 GST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoOutIsSucessful status=SUCCESS method=HomePageTestClass.verifyLogoOutIsSucessful()[pri:1, instance:testClasses.HomePageTestClass@6f3c660a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.HomePageTestClass -->
      <class name="testClasses.LoginPageTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:21:09 GST" name="beforeMethod" finished-at="2024-07-31T14:21:21 GST" duration-ms="12538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyIfLogoIsDiplayed()[pri:1, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:21:21 GST" name="verifyIfLogoIsDiplayed" finished-at="2024-07-31T14:21:22 GST" duration-ms="724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIfLogoIsDiplayed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:21:22 GST" name="afterMethod" finished-at="2024-07-31T14:21:22 GST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyIfLogoIsDiplayed status=SUCCESS method=LoginPageTestClass.verifyIfLogoIsDiplayed()[pri:1, instance:testClasses.LoginPageTestClass@71c27ee8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:21:23 GST" name="beforeMethod" finished-at="2024-07-31T14:21:35 GST" duration-ms="12050" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsucessfulLogin(java.lang.String,java.lang.String)[pri:2, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:21:35 GST" name="verifyUnsucessfulLogin" data-provider="unsucessfulLoginData" finished-at="2024-07-31T14:21:40 GST" duration-ms="5023" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsucessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:21:40 GST" name="afterMethod" finished-at="2024-07-31T14:21:40 GST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsucessfulLogin status=SUCCESS method=LoginPageTestClass.verifyUnsucessfulLogin(java.lang.String,java.lang.String)[pri:2, instance:testClasses.LoginPageTestClass@71c27ee8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:21:40 GST" name="beforeMethod" finished-at="2024-07-31T14:21:53 GST" duration-ms="12581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsucessfulLogin(java.lang.String,java.lang.String)[pri:2, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:21:53 GST" name="verifyUnsucessfulLogin" data-provider="unsucessfulLoginData" finished-at="2024-07-31T14:21:58 GST" duration-ms="4911" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ad]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsucessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:21:58 GST" name="afterMethod" finished-at="2024-07-31T14:21:58 GST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsucessfulLogin status=SUCCESS method=LoginPageTestClass.verifyUnsucessfulLogin(java.lang.String,java.lang.String)[pri:2, instance:testClasses.LoginPageTestClass@71c27ee8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:21:58 GST" name="beforeMethod" finished-at="2024-07-31T14:22:10 GST" duration-ms="11813" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsucessfulLogin(java.lang.String,java.lang.String)[pri:2, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:22:10 GST" name="verifyUnsucessfulLogin" data-provider="unsucessfulLoginData" finished-at="2024-07-31T14:22:14 GST" duration-ms="4566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsucessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:22:14 GST" name="afterMethod" finished-at="2024-07-31T14:22:14 GST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsucessfulLogin status=SUCCESS method=LoginPageTestClass.verifyUnsucessfulLogin(java.lang.String,java.lang.String)[pri:2, instance:testClasses.LoginPageTestClass@71c27ee8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:22:14 GST" name="beforeMethod" finished-at="2024-07-31T14:22:27 GST" duration-ms="12527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCannotLoginOption()[pri:3, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:22:27 GST" name="verifyCannotLoginOption" finished-at="2024-07-31T14:22:29 GST" duration-ms="2606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCannotLoginOption -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:22:29 GST" name="afterMethod" finished-at="2024-07-31T14:22:29 GST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCannotLoginOption status=SUCCESS method=LoginPageTestClass.verifyCannotLoginOption()[pri:3, instance:testClasses.LoginPageTestClass@71c27ee8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:22:29 GST" name="beforeMethod" finished-at="2024-07-31T14:22:42 GST" duration-ms="12544" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySucessfulLogin()[pri:4, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:22:42 GST" name="verifySucessfulLogin" finished-at="2024-07-31T14:22:49 GST" duration-ms="7144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySucessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.LoginPageTestClass@71c27ee8]" started-at="2024-07-31T14:22:49 GST" name="afterMethod" finished-at="2024-07-31T14:22:49 GST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySucessfulLogin status=SUCCESS method=LoginPageTestClass.verifySucessfulLogin()[pri:4, instance:testClasses.LoginPageTestClass@71c27ee8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.LoginPageTestClass -->
      <class name="testClasses.RegisterAPatientTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.RegisterAPatientTestClass@3e7dd664]" started-at="2024-07-31T14:22:49 GST" name="beforeMethod" finished-at="2024-07-31T14:23:01 GST" duration-ms="12364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPatientRegistration()[pri:1, instance:testClasses.RegisterAPatientTestClass@3e7dd664]" started-at="2024-07-31T14:23:01 GST" name="verifyPatientRegistration" finished-at="2024-07-31T14:23:24 GST" duration-ms="22449" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#address1"}
  (Session info: chrome=127.0.6533.88)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '14.5', java.version: '17.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8dd0120cce40b7c9e820a2325a2100a6, findElement {using=id, value=address1}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.88, chrome: {chromedriverVersion: 127.0.6533.88 (a2d0cb026721..., userDataDir: /var/folders/39/pj8kwyp5081...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56433}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://localhost:56433/devtoo..., se:cdpVersion: 127.0.6533.88, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8dd0120cce40b7c9e820a2325a2100a6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#address1"}
  (Session info: chrome=127.0.6533.88)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '14.5', java.version: '17.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8dd0120cce40b7c9e820a2325a2100a6, findElement {using=id, value=address1}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.88, chrome: {chromedriverVersion: 127.0.6533.88 (a2d0cb026721..., userDataDir: /var/folders/39/pj8kwyp5081...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56433}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://localhost:56433/devtoo..., se:cdpVersion: 127.0.6533.88, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8dd0120cce40b7c9e820a2325a2100a6
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy16.sendKeys(Unknown Source)
at utilities.GeneralUtilities.typeOnElement(GeneralUtilities.java:15)
at pageClassesInProject.RegisterAPatientPageClass.registeringPatient(RegisterAPatientPageClass.java:97)
at testClasses.RegisterAPatientTestClass.verifyPatientRegistration(RegisterAPatientTestClass.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPatientRegistration -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.RegisterAPatientTestClass@3e7dd664]" started-at="2024-07-31T14:23:24 GST" name="afterMethod" finished-at="2024-07-31T14:23:24 GST" duration-ms="366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPatientRegistration status=FAILURE method=RegisterAPatientTestClass.verifyPatientRegistration()[pri:1, instance:testClasses.RegisterAPatientTestClass@3e7dd664] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.RegisterAPatientTestClass -->
    </test> <!-- Test -->
  </suite> <!-- GroupSuite -->
</testng-results>
